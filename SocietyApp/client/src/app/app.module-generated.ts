/*
  This file is automatically generated. Any changes will be overwritten.
  Modify app.module.ts instead.
*/
import { APP_INITIALIZER } from '@angular/core';
import { BrowserModule } from '@angular/platform-browser';
import { BrowserAnimationsModule } from '@angular/platform-browser/animations';
import { FormsModule } from '@angular/forms';
import { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';
import { BodyModule } from '@radzen/angular/dist/body';
import { CardModule } from '@radzen/angular/dist/card';
import { ContentContainerModule } from '@radzen/angular/dist/content-container';
import { HeaderModule } from '@radzen/angular/dist/header';
import { SidebarToggleModule } from '@radzen/angular/dist/sidebar-toggle';
import { LabelModule } from '@radzen/angular/dist/label';
import { ProfileMenuModule } from '@radzen/angular/dist/profilemenu';
import { GravatarModule } from '@radzen/angular/dist/gravatar';
import { SidebarModule } from '@radzen/angular/dist/sidebar';
import { PanelMenuModule } from '@radzen/angular/dist/panelmenu';
import { FooterModule } from '@radzen/angular/dist/footer';
import { ContentModule } from '@radzen/angular/dist/content';
import { HeadingModule } from '@radzen/angular/dist/heading';
import { GridModule } from '@radzen/angular/dist/grid';
import { TemplateFormModule } from '@radzen/angular/dist/template-form';
import { TextBoxModule } from '@radzen/angular/dist/textbox';
import { RequiredValidatorModule } from '@radzen/angular/dist/required-validator';
import { ButtonModule } from '@radzen/angular/dist/button';
import { ImageModule } from '@radzen/angular/dist/image';
import { DropDownModule } from '@radzen/angular/dist/dropdown';
import { DatePickerModule } from '@radzen/angular/dist/datepicker';
import { EmailValidatorModule } from '@radzen/angular/dist/email-validator';
import { FileInputModule } from '@radzen/angular/dist/file-input';
import { NumericModule } from '@radzen/angular/dist/numeric';
import { FormModule } from '@radzen/angular/dist/form';
import { PasswordModule } from '@radzen/angular/dist/password';
import { LoginModule } from '@radzen/angular/dist/login';
import { HtmlModule } from '@radzen/angular/dist/html';
import { SharedModule } from '@radzen/angular/dist/shared';
import { NotificationModule } from '@radzen/angular/dist/notification';
import { DialogModule } from '@radzen/angular/dist/dialog';

import { ConfigService, configServiceFactory } from './config.service';
import { AppRoutes } from './app.routes';
import { AppComponent } from './app.component';
import { CacheInterceptor } from './cache.interceptor';
export { AppComponent } from './app.component';
import { GendersComponent } from './genders/genders.component';
import { AddGenderComponent } from './add-gender/add-gender.component';
import { EditGenderComponent } from './edit-gender/edit-gender.component';
import { MembersComponent } from './members/members.component';
import { AddMemberComponent } from './add-member/add-member.component';
import { EditMemberComponent } from './edit-member/edit-member.component';
import { MemberContributionsComponent } from './member-contributions/member-contributions.component';
import { AddMemberContributionComponent } from './add-member-contribution/add-member-contribution.component';
import { EditMemberContributionComponent } from './edit-member-contribution/edit-member-contribution.component';
import { MemberPositionsComponent } from './member-positions/member-positions.component';
import { AddMemberPositionComponent } from './add-member-position/add-member-position.component';
import { EditMemberPositionComponent } from './edit-member-position/edit-member-position.component';
import { ApplicationUsersComponent } from './application-users/application-users.component';
import { ApplicationRolesComponent } from './application-roles/application-roles.component';
import { RegisterApplicationUserComponent } from './register-application-user/register-application-user.component';
import { LoginComponent } from './login/login.component';
import { AddApplicationUserComponent } from './add-application-user/add-application-user.component';
import { EditApplicationUserComponent } from './edit-application-user/edit-application-user.component';
import { AddApplicationRoleComponent } from './add-application-role/add-application-role.component';
import { ProfileComponent } from './profile/profile.component';
import { UnauthorizedComponent } from './unauthorized/unauthorized.component';
import { LoginLayoutComponent } from './login-layout/login-layout.component';
import { MainLayoutComponent } from './main-layout/main-layout.component';

import { ConDataService } from './con-data.service';
import { SecurityService, UserService } from './security.service';
import { SecurityInterceptor } from './security.interceptor';
import { AuthGuard } from './auth.guard';

export const PageDeclarations = [
  GendersComponent,
  AddGenderComponent,
  EditGenderComponent,
  MembersComponent,
  AddMemberComponent,
  EditMemberComponent,
  MemberContributionsComponent,
  AddMemberContributionComponent,
  EditMemberContributionComponent,
  MemberPositionsComponent,
  AddMemberPositionComponent,
  EditMemberPositionComponent,
  ApplicationUsersComponent,
  ApplicationRolesComponent,
  RegisterApplicationUserComponent,
  LoginComponent,
  AddApplicationUserComponent,
  EditApplicationUserComponent,
  AddApplicationRoleComponent,
  ProfileComponent,
  UnauthorizedComponent,
];

export const LayoutDeclarations = [
  LoginLayoutComponent,
  MainLayoutComponent,
];

export const AppDeclarations = [
  ...PageDeclarations,
  ...LayoutDeclarations,
  AppComponent
];

export const AppProviders = [
  {
    provide: HTTP_INTERCEPTORS,
    useClass: CacheInterceptor,
    multi: true
  },
  ConDataService,
  UserService,
  SecurityService,
  {
    provide: HTTP_INTERCEPTORS,
    useClass: SecurityInterceptor,
    multi: true
  },
  AuthGuard,
  ConfigService,
  {
    provide: APP_INITIALIZER,
    useFactory: configServiceFactory,
    deps: [ConfigService],
    multi: true
  }
];

export const AppImports = [
  BrowserModule,
  BrowserAnimationsModule,
  FormsModule,
  HttpClientModule,
  BodyModule,
  CardModule,
  ContentContainerModule,
  HeaderModule,
  SidebarToggleModule,
  LabelModule,
  ProfileMenuModule,
  GravatarModule,
  SidebarModule,
  PanelMenuModule,
  FooterModule,
  ContentModule,
  HeadingModule,
  GridModule,
  TemplateFormModule,
  TextBoxModule,
  RequiredValidatorModule,
  ButtonModule,
  ImageModule,
  DropDownModule,
  DatePickerModule,
  EmailValidatorModule,
  FileInputModule,
  NumericModule,
  FormModule,
  PasswordModule,
  LoginModule,
  HtmlModule,
  SharedModule,
  NotificationModule,
  DialogModule,
  AppRoutes
];
